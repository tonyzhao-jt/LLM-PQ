# Main 3rd Party
import os
import pickle
# example utils
from example_utils import create_uniform_sharding_strategies, parse_args

if __name__ == '__main__':
    
    args = parse_args()
    bitwidth = args.bitwidth
    if type(bitwidth) is not int and bitwidth.isnumeric():
        args.bitwidth = int(bitwidth)
    
    # test case
    model_name = args.model_name
    model_size = args.model_size
    
    # load the strategy generated by the SHAQ
    method = args.method
    sol_file = f"{args.strat_file_name}.pkl"
    root_dir = os.environ['ROOT_DIR']
    strat_folder = f'{root_dir}/scripts/part_strategy'
    sols_path = f'{strat_folder}/{sol_file}'
    sols = pickle.load(open(sols_path, "rb"))
    num_tokens_to_generate = sols['mu_n']
    max_tokens_to_generate = sols['n']
    bs_token = sols['gloabl_bz'] # how many sentence in a batch
    assert args.method in sols, f"no {args.method} in {sols_path}"
    # get sols info
    sol = sols[args.method]
    sharding_strategy = sol['use_plan']
    prefill_bs = sol['prefill_bz']
    decoder_bss = sol['bz_decode_bss']
    prompt_length = args.prompt_length if sols.get('prompt_length') is None else sols['prompt_length']

    print(sharding_strategy)
    print(prefill_bs)
    print(decoder_bss)





